// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct S2C_GAME_START : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static S2C_GAME_START GetRootAsS2C_GAME_START(ByteBuffer _bb) { return GetRootAsS2C_GAME_START(_bb, new S2C_GAME_START()); }
  public static S2C_GAME_START GetRootAsS2C_GAME_START(ByteBuffer _bb, S2C_GAME_START obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public S2C_GAME_START __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Players(int j) { int o = __p.__offset(4); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int PlayersLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<S2C_GAME_START> CreateS2C_GAME_START(FlatBufferBuilder builder,
      VectorOffset playersOffset = default(VectorOffset)) {
    builder.StartTable(1);
    S2C_GAME_START.AddPlayers(builder, playersOffset);
    return S2C_GAME_START.EndS2C_GAME_START(builder);
  }

  public static void StartS2C_GAME_START(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPlayers(FlatBufferBuilder builder, VectorOffset playersOffset) { builder.AddOffset(0, playersOffset.Value, 0); }
  public static VectorOffset CreatePlayersVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreatePlayersVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartPlayersVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<S2C_GAME_START> EndS2C_GAME_START(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<S2C_GAME_START>(o);
  }
};

